@using GCCSI_CO2RE.Models

@model GCCSI_CO2RE.Models.FacilityData

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <fieldset>

            @if (ViewBag.IsUpdate == true)

            {

                @Html.HiddenFor(model => model.FacilityDataID)

            }


            <table class="table table-striped table-bordered dt-responsive wrap dataEntryTableHr" cellspacing="0" style="table-layout:fixed; font-size:12px; margin-top:1.5rem">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CaptureCapacity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CaptureCapacityMin)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CaptureCapacityMax)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FacilityCaptureTypeID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CurrencyDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ExcludeFromMap_HideInformation)
                        </th>
                    </tr>
                </thead>
                <tr>
                    <td>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.CaptureCapacity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CaptureCapacity, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.CaptureCapacityMin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CaptureCapacityMin, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.CaptureCapacityMax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CaptureCapacityMax, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownList("FacilityCaptureTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FacilityCaptureTypeID, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.CurrencyDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrencyDate, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.ExcludeFromMap_HideInformation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ExcludeFromMap_HideInformation, "", new { @class = "text-danger" })
                    </td>
                </tr>

            </table>

            <table class="table table-striped table-bordered dt-responsive wrap dataEntryTableHr" cellspacing="0" style="table-layout:fixed; font-size:12px; margin-top:1.5rem">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Industry_Feedstock)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CaptureLatitude)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CaptureLongitude)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OperationDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FacilityCategory.FacilityCategoryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FacilityStatus.FacilityStatusName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Region.RegionName)
                        </th>
                    </tr>
                </thead>
                <tr>
                    <td>
                        @Html.EditorFor(model => model.Industry_Feedstock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Industry_Feedstock, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.CaptureLatitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CaptureLatitude, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.CaptureLongitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CaptureLongitude, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.OperationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OperationDate, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownList("FacilityCategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FacilityCategoryID, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownList("FacilityStatusID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FacilityStatusID, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownList("RegionID", null, htmlAttributes: new { @class = "form-control", @id = "regionDropDown" })
                        @Html.ValidationMessageFor(model => model.RegionID, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </table>

            <table class="table table-striped table-bordered dt-responsive wrap dataEntryTableHr" cellspacing="0" style="table-layout:fixed; font-size:12px; margin-top:1.5rem">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Country.CountryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Location)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.StorageLatitude)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.StorageLongitude)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TransportationType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TransportationDistance)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FacilityIndustry.FacilityIndustryName)
                        </th>
                    </tr>
                </thead>
                <tr>
                    <td>
                        @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control", @id = "countryDropDown" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.StorageLatitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StorageLatitude, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.StorageLongitude, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StorageLongitude, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.TransportationType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TransportationType, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.TransportationDistance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TransportationDistance, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownList("FacilityIndustryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FacilityIndustryID, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </table>

            <table class="table table-striped table-bordered dt-responsive wrap dataEntryTableHr" cellspacing="0" style="table-layout:fixed; font-size:12px; margin-top:1.5rem">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FacilityStorageCode.FacilityStorageCodeName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FacilityTransportCode.FacilityTransportCodeName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.NewBuildOrRetrofit)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.StorageFormationAndDepth)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.UtilisationType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ReferenceLink)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Year.YearName)
                        </th>
                    </tr>
                </thead>
                <tr>
                    <td>
                        @Html.DropDownList("FacilityStorageCodeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FacilityStorageCodeID, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownList("FacilityTransportCodeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FacilityTransportCodeID, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.NewBuildOrRetrofit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewBuildOrRetrofit, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.StorageFormationAndDepth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StorageFormationAndDepth, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.UtilisationType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UtilisationType, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.ReferenceLink, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReferenceLink, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DropDownList("YearID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.YearID, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </table>


            <div>
                <div class="editor-label">

                    @Html.LabelFor(model => model.Proponents)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.Proponents, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Proponents)

                </div>

                <div class="editor-label">

                    @Html.LabelFor(model => model.CaptureSource)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.CaptureSource, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.CaptureSource)

                </div>

                <div class="editor-label">

                    @Html.LabelFor(model => model.CaptureMethod)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.CaptureMethod, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.CaptureMethod)

                </div>


                <div class="editor-label">

                    @Html.LabelFor(model => model.ShortDescription)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.ShortDescription)

                </div>

                <div class="editor-label">

                    @Html.LabelFor(model => model.StorageType)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.StorageType, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.StorageType)

                </div>

                <div class="editor-label">

                    @Html.LabelFor(model => model.FacilityDescription)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.FacilityDescription, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.FacilityDescription)

                </div>

                <div class="editor-label">

                    @Html.LabelFor(model => model.KeyMilestone)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.KeyMilestone, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.KeyMilestone)

                </div>

                <div class="editor-label">

                    @Html.LabelFor(model => model.Summary)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.Summary, new { @id = "summaryEntry", @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Summary)

                </div>


                <div class="editor-label">

                    @Html.LabelFor(model => model.Note)

                </div>

                <div class="editor-field" style="font-size:12px">

                    @Html.TextAreaFor(model => model.Note, new { @id = "noteEntry", @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Note)

                </div>
            </div>


            <p style="margin-top:1.5rem">


                @if (ViewBag.IsUpdate == true)

            {

                    <input type="submit" value="Update" id="btnUpdate" name="cmd" class="btn btn-secondary pi-draggable" />
                    <input type="button" value="Cancel" id="btncancelEdit" class="btn btn-danger pi-draggable" />
                }

                else

                {

                    <input type="submit" value="Save" id="btnSave" name="cmd" class="btn btn-secondary pi-draggable" />
                    <input type="button" value="Cancel" id="btncancelCreate" class="btn btn-danger pi-draggable" />
                }

            </p>



</fieldset>
    </div>

    <script type="text/javascript">
            $(document).ready(function () {

                $('#regionDropDown').change(function () {
                    var regionChosen = $(this).val();
                    var countryChosen = $("#countryDropDown").val();
                    $.ajax({
                        url: '@Url.Action("GetSelectCountriesList")',
                        type: 'GET',
                        data: {
                            regionID: regionChosen,
                            countryID: countryChosen
                        },
                        cache: false,
                        success: function (result) {
                            //We will add the options here now.
                            var countryDropDown = $("#countryDropDown");
                            countryDropDown.empty();
                            countryDropDown.append(result);
                        }
                    });
                });

                $('#regionDropDown').trigger('change');

            });
    </script>


}
