@model IEnumerable<GCCSI_CO2RE.Models.StorageEstimatesData>

@{
    ViewBag.Title = "Storage Estimates Data";
}

<div id="yearAndCreateStorageEst" style="display:flex;align-items: flex-end; flex-direction:column;">
    <div style="display:flex; flex-flow:row; align-items:center ">
        <div id="createRowDiv" class="my-2 d-flex justify-content-end" style="padding-right:10px">
            @Html.ActionLink("Create New", "AddEditStorageEstimates", null, new { @class = "createDialogButton btn btn-primary pi-draggable" })
        </div>
        <div>
            <div class="d-flex justify-content-end align-items-center">
                <div style="font-size:20pt;">
                    <b>
                        Year:&nbsp;
                    </b>
                </div>
                <select id="yearFilter" class="dropdownoption">
                    <option value="All">All</option>
                    @foreach (var year in ViewBag.PossibleYears)
                    {
                        <option value="@year.YearName">@year.YearName</option>
                    }
                </select>
            </div>
        </div>
    </div>
</div>

<div class="datatable-wide" style="padding-left: 0; padding-right: 0">
    <br />
    <div style="width:100%">

        <table id="storageEstGrid" class="table table-striped table-bordered dt-responsive wrap" cellspacing="0">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Region.RegionName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Country.CountryName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.NationalResourceEstimates)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ConfidenceInEstimates)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProspectiveBasins)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Summary)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Note)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Year.YearName)
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Region.RegionName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country.CountryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NationalResourceEstimates)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConfidenceInEstimates)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProspectiveBasins)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Summary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year.YearName)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "AddEditStorageEstimates", new { id = item.StorageEstimatesDataID }, new { @class = "editDialog" }) |
                        @Html.ActionLink("Details", "StorageEstimatesDetails", new { id = item.StorageEstimatesDataID }, new { @class = "detailsDialog" }) |
                        @Html.ActionLink("Delete", "StorageEstimatesDelete", new { id = item.StorageEstimatesDataID }, new { @class = "confirmDialog" })
                    </td>
                </tr>
            }

        </table>

    </div>
</div>
  

@Scripts.Render("~/Scripts/dataEntryShared.js")

<script>
    $('#storageEstGrid').DataTable({
        responsive: true,
        searching: true,
        autoWidth: false
    });


    $(document).ready(function () {
        //Assurance to hide column.
        var table = $('#storageEstGrid').DataTable();
        var column = table.column(7);
        column.visible(false);

        //Add on change function.
        $("#yearFilter").change(function () {
            //On the user change of year filter we want to update the table.
            var yearWanted = document.getElementById("yearFilter").value;
            var table = $('#storageEstGrid').dataTable();
            if (yearWanted == "All") {
                table.fnFilter("", 7, false)
            }
            else {
                table.fnFilter(yearWanted, 7);
            }
        });

        //Once the page has loaded -- try to select current year from year selection.
        $("#yearFilter").val("All");

        var $x = $('#storageEstGrid_filter');
        $x.replaceWith($("#yearAndCreateStorageEst"));

    });

</script>
